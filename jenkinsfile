pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1' // Replace with your region
        ECR_REGISTRY = '715841371419.dkr.ecr.us-east-1.amazonaws.com/my-first-repo'
        ECR_REPO = 'my-first-repo'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                branches: [[name: '/main']],  // or '/master' if that's your branch
                userRemoteConfigs: [[
                    url: 'https://github.com/kulkarniakshays/docker.git',
                    credentialsId: 'mygitoken'
            ]]
    ])
            }
        }

        stage('Set AWS Credentials') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'aws-credentials',     // ✅ Jenkins Credentials ID
                    usernameVariable: 'AWS_ACCESS_KEY_ID',
                    passwordVariable: 'AWS_SECRET_ACCESS_KEY'
                )]) {
                    sh '''
                    mkdir -p ~/.aws

                    cat > ~/.aws/credentials <<EOF
[default]
aws_access_key_id=$AWS_ACCESS_KEY_ID
aws_secret_access_key=$AWS_SECRET_ACCESS_KEY
EOF

                    cat > ~/.aws/config <<EOF
[default]
region=$AWS_REGION
output=json
EOF
                    '''
                }
            }
        }

        stage('Login to ECR') {
            steps {
                sh '''
                aws ecr get-login-password --region $AWS_REGION | \
                docker login --username AWS \
                --password-stdin $ECR_REGISTRY
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                docker build -t $ECR_REPO:$IMAGE_TAG .
                docker tag $ECR_REPO:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG
                '''
            }
        }

        stage('Push Image to ECR') {
            steps {
                sh '''
                docker push $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG
                '''
            }
        }
    }

    post {
        success {
            echo "✅ Docker image pushed to ECR: $ECR_REPO:$IMAGE_TAG"
        }
        failure {
            echo "❌ Failed to push Docker image to ECR"
        }
    }
}
    

    